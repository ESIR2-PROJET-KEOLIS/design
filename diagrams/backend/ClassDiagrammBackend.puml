@startuml
class BusController {
  
  Bus[] getAll()
  Bus getById(int id)
  Bus create(string ligne, double longitude,double latitude)
}

class BusService {
  ligne : String
  positionGeo : Position
  void setLigne(String Ligne)
  String getLigne()
  void setPosition(Position p)
  Position getPosition()
}

BusController "1" -- "1" BusService : communique

class PositionController {
   longitude : Double
   latitude : Double

}

class PositionService {
   longitude : Double
   latitude : Double
   void setLongitude(String Ligne)
   String getLongitude()
   void setLatitude(Position p)
   Position getLatitude()
}

PositionController "1" -- "1" PositionService : communique


class CommunicationController {

}

class CommunicationService {
   async void listenToRabbitMQ()
}

CommunicationController "1" -- "1" CommunicationService : communique


class SimulationController{
SimulationData getSimulation(params)
}

class SimulationService{
Promise<SimulationData> getSimulation(params)
}

SimulationController "1" -- "1" SimulationService : communique


class ServiceWebSocket{
 void initWebSocket()
}

class ServiceCacheRedis{
  void store(data)
  void get()
}


ServiceCacheRedis -- ServiceWebSocket

BusService "1" -- "1" PositionService : poss√®de
ServiceCacheRedis -- SimulationController
BusService -- ServiceCacheRedis
ServiceWebSocket -- CommunicationService
@enduml